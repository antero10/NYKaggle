source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
View(NYTrain)
View(NYTrain)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
View(NewsTest)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
View(HeadlineWords)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
View(HeadlineWordsTrain)
NewsCART = rpart(Popular ~ ., data = HeadlineWordsTrain, method = "class")
prp(NewsCART)
NewsLOG = glm(Popular ~.,data= HeadlineWordsTrain,family="binomial")
summary(NewsLog)
summary(NewsLOG)
source('~/.active-rstudio-document')
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
NewsTrain$PubDate$wday
NewsTrain$PubDate$month
NewsTrain$PubDate$mon
NewsTrain$PubDate$hou
NewsTrain$PubDate$min
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
View(NewsTest)
NewsTrain$PubDate$min
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
NewsTrain$PubDate$hou
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
plot(clusterDaily)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
NewsModel1 = glm(Popular ~ .,data=stocksTrain1,family="binomial")
stocksTest2 = subset(HeadlineWordsTest, clusterTest == 2)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
summary(NewsModel1)
head(stocksTrain1)
NewsLog = glm(Popular ~.,data= stocksTrain1,family="binomial")
PredictLog = predict(NewsLog,data=stocksTest1,type="response")
table(PredictLog > 0.5,stocksTest1)
View(HeadlineWordsTrain)
View(HeadlineWords)
View(HeadlineWordsTrain)
str(HeadlineWordsTrain)
str(stocksTest1)
KMEANS
set.seed(144)
km = kmeans(HeadlineWordsTrain,centers = 2)
kmCluster1 = subset(HeadlineWordsTrain, km$cluster == 1)
kmCluster2 = subset(HeadlineWordsTrain, km$cluster == 2)
library(flexclust)
km.kcca = as.kcca(km, HeadlineWordsTrain)
clusterTrain = predict(km.kcca)
clusterTest = predict(km.kcca, newdata=normTest)
#kmeans subset
stocksTrain1 = subset(HeadlineWordsTrain,clusterTrain == 1)
stocksTrain2 = subset(HeadlineWordsTrain,clusterTrain == 2)
stocksTest1 = subset(HeadlineWordsTest, clusterTest == 1)
stocksTest2 = subset(HeadlineWordsTest, clusterTest == 2)
NewsLog = glm(Popular ~.,data= stocksTrain1,family="binomial")
PredictLog = predict(NewsLog,data=stocksTest1,type="response")
table(PredictLog > 0.5,stocksTest1$Popular)
str(stocksTest1)
limitedTrain = HeadlineWordsTrain
limitedTest = HeadlineWordsTest
limitedTrain$Popular = NULL
limitedTest$Popular = NULL
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
#CLUSTERS
distances = dist(HeadlineWordsTrain, method = "euclidean")
clusterDaily = hclust(distances, method = "ward.D")
clusterGroups = cutree(clusterDaily, k = 2)
#KMEANS
set.seed(144)
km = kmeans(HeadlineWordsTrain,centers = 2)
kmCluster1 = subset(HeadlineWordsTrain, km$cluster == 1)
kmCluster2 = subset(HeadlineWordsTrain, km$cluster == 2)
library(flexclust)
km.kcca = as.kcca(km, HeadlineWordsTrain)
clusterTrain = predict(km.kcca)
clusterTest = predict(km.kcca, newdata=normTest)
#kmeans subset
stocksTrain1 = subset(HeadlineWordsTrain,clusterTrain == 1)
stocksTrain2 = subset(HeadlineWordsTrain,clusterTrain == 2)
stocksTest1 = subset(HeadlineWordsTest, clusterTest == 1)
stocksTest2 = subset(HeadlineWordsTest, clusterTest == 2)
NewsLog = glm(Popular ~.,data= stocksTrain1,family="binomial")
PredictLog = predict(NewsLog,data=stocksTest1,type="response")
table(PredictLog > 0.5,stocksTest1$Popular)
summary(stocksTest1)
summary(stocksTrain1)
#KMEANS
set.seed(144)
km = kmeans(HeadlineWordsTrain,centers = 2)
kmCluster1 = subset(HeadlineWordsTrain, km$cluster == 1)
kmCluster2 = subset(HeadlineWordsTrain, km$cluster == 2)
library(flexclust)
km.kcca = as.kcca(km, HeadlineWordsTrain)
clusterTrain = predict(km.kcca)
clusterTest = predict(km.kcca, newdata=HeadlineWordsTest)
#kmeans subset
stocksTrain1 = subset(HeadlineWordsTrain,clusterTrain == 1)
stocksTrain2 = subset(HeadlineWordsTrain,clusterTrain == 2)
stocksTest1 = subset(HeadlineWordsTest, clusterTest == 1)
stocksTest2 = subset(HeadlineWordsTest, clusterTest == 2)
NewsLog = glm(Popular ~.,data= stocksTrain1,family="binomial")
PredictLog = predict(NewsLog,data=stocksTest1,type="response")
table(PredictLog > 0.5,stocksTest1$Popular)
View(HeadlineWordsTest)
View(NewsTest)
str(NewsTest)
str(HeadlineWordsTest)
View(HeadlineWordsTrain)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
View(HeadlineWordsTest)
View(HeadlineWordsTrain)
HeadlineWordsTest$Popular
HeadlineWordsTrain$Popular
View(NewsTrain)
source('~/.active-rstudio-document')
View(SnippetWordsTrain)
View(NewsTrain)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
View(HeadlineWordsTrain)
View(HeadlineWordsTrain)
View(NewsTest)
View(SnippetWordsTest)
str(SnippetWordsTest)
str(SnippetWordsTrain)
str(SnippetWordsTrain$Month)
View(NewsTrain)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
View(HeadlineWordsTrain)
View(SnippetWordsTrain)
SnippetWordsTrain$UniqueID
AbstractWordsTrain$UniqueID
View(NewsTest)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
NewsTrain2 = merge(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain,by="UniqueID")
rbind(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain)
HeadlineWordsTrain$UniqueID
SnippetWordsTrain$UniqueID
AbstractWordsTrain$UniqueID
NewsTrain2 = merge(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain,by="UniqueID")
NewsTrain2 = merge(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain,by=c("UniqueID"))
NewsTrain2 = merge(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain,by.x="UniqueID")
View(NewsTrain)
NewsTrain2 = merge(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain,by.x="UniqueID",by.y="UniqueID)
NewsTrain2 = merge(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain,by.x="UniqueID",by.y="UniqueID)
NewsTrain2 = merge(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain,by.x="UniqueID",by.y="UniqueID")
View(NewsTrain2)
NewsTrain2 = merge(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain,x="UniqueID",y="UniqueID")
NewsTrain2 = merge(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain,by.x="UniqueID",by.y="UniqueID")
require(plyr)
install.packages('plyr')
library('plyr')
df =join_all(list(HeadlineWordsTrain,SnippetWordsTrain,AbstractWordsTrain), by = 'UniqueID', type = 'full')
View(df)
HeadlineWordsLog = glm(Popular ~ ., data=NewsTrain2, family=binomial)
NewsTrain2$Popular.x
NewsTrain2$Popular.y
str(NewsTran2)
summary(NewsTrain2)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
NewsTrain2$Popular = NewsTrain$Popular
NewsTrain2$PubDate = strptime(NewsTrain2$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTest2$PubDate = strptime(NewsTest2$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTrain2$Month = NewsTrain2$PubDate$mon
NewsTest2$Month = NewsTest2$PubDate$mon
NewsTrain2$Weekday = NewsTrain2$PubDate$wday
NewsTest2$Weekday = NewsTest2$PubDate$wday
NewsTrain2$Hour = NewsTrain2$PubDate$hou
NewsTest2$Hour = NewsTest2$PubDate$hou
NewsTrain2$Minutes = NewsTrain2$PubDate$min
NewsTest2$Minutes = NewsTest2$PubDate$min
NewsTrain2$Popular = NewsTrain$Popular
NewsTrain2$PubDate = strptime(NewsTrain$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTest2$PubDate = strptime(NewsTest$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTrain2$Month = NewsTrain2$PubDate$mon
NewsTest2$Month = NewsTest2$PubDate$mon
NewsTrain2$Weekday = NewsTrain2$PubDate$wday
NewsTest2$Weekday = NewsTest2$PubDate$wday
NewsTrain2$Hour = NewsTrain2$PubDate$hou
NewsTest2$Hour = NewsTest2$PubDate$hou
NewsTrain2$Minutes = NewsTrain2$PubDate$min
NewsTest2$Minutes = NewsTest2$PubDate$min
HeadlineWordsLog = glm(Popular ~ ., data=NewsTrain2, family=binomial)
View(NewsTest)
HeadlineWordsLog = glm(Popular ~ -PubDate., data=NewsTrain2, family=binomial)
HeadlineWordsLog = glm(Popular ~ -PubDate+ ., data=NewsTrain2, family=binomial)
HeadlineWordsLog = glm(Popular ~ . - PubDate, data=NewsTrain2, family=binomial)
View(NewsTest2)
NewsTrain2$PubDate
HeadlineWordsLog = glm(Popular ~ -PubDate+ ., data=NewsTrain2, family=binomial)
HeadlineWordsLog = glm(Popular ~ ., data=NewsTrain2, family=binomial)
limitedTrain = NewsTrain2
limitedTrain$Popular = NULL
limitedTest = NewsTest2
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
limitedTrain = NewsTrain2
limitedTrain$Popular = NULL
limitedTest = NewsTest2
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
preproc
library(caret)
preproc = preProcess(limitedTrain)
limitedTrain = NewsTrain2
limitedTrain$Popular = NULL
preproc = preProcess(limitedTrain)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
EnterModel = glm(Popular ~ .,data=NewsTrain,family="binomial")
NewsTest$PubDate = strptime(NewsTest$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTrain$PubDate = strptime(NewsTrain$PubDate, "%Y-%m-%d %H:%M:%S")
EnterModel = glm(Popular ~ .,data=NewsTrain,family="binomial")
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
View(NewsTest)
View(NewsTrain)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
HeadLineWordsTrain$Popular = NewsTrain$Popular
HeadlineWordsTrain$Popular = NewsTrain$Popular
EnterModel = glm(Popular ~ .,data=HeadlineWordsTrain,family="binomial")
View(HeadlineWordsTrain)
source('~/Dropbox/Data Science/MITX/Kaggle/NYTimes.R')
View(NewsTrain2)
test = glm(Popular ~ ., data= NewsTrain2,family="binomial")
str(test)
summary(str)
summary(test)
View(NewsTest2)
summary(NewsTest2)
str(NewsTest2)
str(test)
summary(test)
